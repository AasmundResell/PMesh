#!/usr/bin/env python

###
### This file is generated automatically by SALOME v9.9.0 with dump python functionality
###

import sys
import salome

salome.salome_init()
import salome_notebook
notebook = salome_notebook.NoteBook()
sys.path.insert(0, r'/home/asmund/dev/PMesh/Scripts')

###
### SHAPER component
###

from salome.shaper import model

model.begin()
partSet = model.moduleDocument()

### Create Part
Part_1 = model.addPart(partSet)
Part_1_doc = Part_1.document()

### Create Sketch
Sketch_1 = model.addSketch(Part_1_doc, model.defaultPlane("XOY"))

### Create SketchProjection
SketchProjection_1 = Sketch_1.addProjection(model.selection("VERTEX", "PartSet/Origin"), False)
SketchPoint_1 = SketchProjection_1.createdFeature()

### Create SketchLine
SketchLine_1 = Sketch_1.addLine(0, 0, 41.2, 0)
SketchLine_1.setName("baseAxialLine_0")
SketchLine_1.result().setName("baseAxialLine_0")

### Create SketchLine
SketchLine_2 = Sketch_1.addLine(41.2, 0, 41.2, 8.1)
SketchLine_2.setName("baseAxialLine_0")
SketchLine_2.result().setName("baseRadialLine_0")
Sketch_1.setHorizontal(SketchLine_1.result())
Sketch_1.setVertical(SketchLine_2.result())
Sketch_1.setCoincident(SketchLine_1.endPoint(), SketchLine_2.startPoint())

### Create SketchLine
SketchLine_3 = Sketch_1.addLine(41.2, 8.1, 0, 1.1)
SketchLine_3.setName("noseConicLine")
SketchLine_3.result().setName("noseConicLine")
Sketch_1.setCoincident(SketchLine_2.endPoint(), SketchLine_3.startPoint())

### Create SketchLine
SketchLine_4 = Sketch_1.addLine(0, 0, 0, 1.1)
SketchLine_4.setName("noseFrontLine")
SketchLine_4.result().setName("noseFrontLine")
Sketch_1.setVertical(SketchLine_4.result())
Sketch_1.setCoincident(SketchLine_4.endPoint(), SketchLine_3.endPoint())
Sketch_1.setCoincident(SketchLine_1.startPoint(), SketchLine_4.startPoint())

### Create SketchLine
SketchLine_5 = Sketch_1.addLine(41.2, 0, 73.90000000000001, 0)
SketchLine_5.setName("baseAxialLine_1")
SketchLine_5.result().setName("baseAxialLine_1")

### Create SketchLine
SketchLine_6 = Sketch_1.addLine(73.90000000000001, 0, 73.90000000000001, 8.1)
SketchLine_6.setName("baseAxialLine_1")
SketchLine_6.result().setName("baseRadialLine_1")
Sketch_1.setHorizontal(SketchLine_5.result())
Sketch_1.setVertical(SketchLine_6.result())
Sketch_1.setCoincident(SketchLine_5.endPoint(), SketchLine_6.startPoint())

### Create SketchLine
SketchLine_7 = Sketch_1.addLine(41.2, 8.1, 73.90000000000001, 8.1)
SketchLine_7.setName("upperContourLine_1")
SketchLine_7.result().setName("upperContourLine_1")
Sketch_1.setHorizontal(SketchLine_7.result())
Sketch_1.setCoincident(SketchLine_6.endPoint(), SketchLine_7.endPoint())

### Create SketchLine
SketchLine_8 = Sketch_1.addLine(73.90000000000001, 0, 75.90000000000001, 0)
SketchLine_8.setName("baseAxialLine_2")
SketchLine_8.result().setName("baseAxialLine_2")

### Create SketchLine
SketchLine_9 = Sketch_1.addLine(75.90000000000001, 0, 75.90000000000001, 6.1)
SketchLine_9.setName("baseAxialLine_2")
SketchLine_9.result().setName("baseRadialLine_2")
Sketch_1.setHorizontal(SketchLine_8.result())
Sketch_1.setVertical(SketchLine_9.result())
Sketch_1.setCoincident(SketchLine_8.endPoint(), SketchLine_9.startPoint())

### Create SketchLine
SketchLine_10 = Sketch_1.addLine(73.90000000000001, 8.1, 75.90000000000001, 6.1)
SketchLine_10.setName("upperContourLine_2")
SketchLine_10.result().setName("upperContourLine_2")
Sketch_1.setCoincident(SketchLine_9.endPoint(), SketchLine_10.endPoint())
Sketch_1.setCoincident(SketchLine_1.startPoint(), SketchPoint_1.result())
Sketch_1.setCoincident(SketchLine_1.endPoint(), SketchLine_5.startPoint())
Sketch_1.setCoincident(SketchLine_2.endPoint(), SketchLine_7.startPoint())
Sketch_1.setCoincident(SketchLine_5.endPoint(), SketchLine_8.startPoint())
Sketch_1.setCoincident(SketchLine_6.endPoint(), SketchLine_10.startPoint())
model.do()

### Create Revolution
Revolution_1 = model.addRevolution(Part_1_doc, [model.selection("EDGE", "Sketch_1/noseFrontLine"), model.selection("EDGE", "Sketch_1/noseConicLine")], model.selection("EDGE", "Sketch_1/baseAxialLine_0"), 360, 0)

### Create Revolution
Revolution_2 = model.addRevolution(Part_1_doc, [model.selection("EDGE", "Sketch_1/upperContourLine_1")], model.selection("EDGE", "Sketch_1/baseAxialLine_1"), 360, 0)

### Create Revolution
Revolution_3 = model.addRevolution(Part_1_doc, [model.selection("EDGE", "Sketch_1/upperContourLine_2"), model.selection("EDGE", "Sketch_1/baseRadialLine_2")], model.selection("EDGE", "Sketch_1/baseAxialLine_2"), 360, 0)

### Create Point
Point_2 = model.addPoint(Part_1_doc, 75.90000000000001, 0, 0)

### Create Export
Export_1 = model.exportToXAO(Part_1_doc, '/tmp/shaper_if8vzq4n.xao', model.selection("FACE", "Revolution_1_1"), 'XAO')
Export_1.setName("Export_6")

### Create Export
Export_2 = model.exportToXAO(Part_1_doc, '/tmp/shaper_y2iu8i25.xao', model.selection("FACE", "Revolution_1_2"), 'XAO')
Export_2.setName("Export_7")

### Create Export
Export_3 = model.exportToXAO(Part_1_doc, '/tmp/shaper_rksjn16x.xao', model.selection("FACE", "Revolution_2_1"), 'XAO')
Export_3.setName("Export_8")

### Create Export
Export_4 = model.exportToXAO(Part_1_doc, '/tmp/shaper_7n7tcb_0.xao', model.selection("FACE", "Revolution_3_1"), 'XAO')
Export_4.setName("Export_9")

### Create Export
Export_5 = model.exportToXAO(Part_1_doc, '/tmp/shaper_sdf784l5.xao', model.selection("FACE", "Revolution_3_2"), 'XAO')
Export_5.setName("Export_10")

### Create Export
Export_6 = model.exportToXAO(Part_1_doc, '/tmp/shaper_start_0.xao', model.selection("FACE", "Revolution_1_1"), 'XAO')
Export_6.setName("Export_1")

### Create Export
Export_7 = model.exportToXAO(Part_1_doc, '/tmp/shaper_ConicNose.xao', model.selection("FACE", "Revolution_1_2"), 'XAO')
Export_7.setName("Export_2")

### Create Export
Export_8 = model.exportToXAO(Part_1_doc, '/tmp/shaper_middle_1.xao', model.selection("FACE", "Revolution_2_1"), 'XAO')
Export_8.setName("Export_3")

### Create Export
Export_9 = model.exportToXAO(Part_1_doc, '/tmp/shaper_middle_2.xao', model.selection("FACE", "Revolution_3_1"), 'XAO')
Export_9.setName("Export_4")

### Create Export
Export_10 = model.exportToXAO(Part_1_doc, '/tmp/shaper_rear_2.xao', model.selection("FACE", "Revolution_3_2"), 'XAO')
Export_10.setName("Export_5")

model.do()


model.end()

###
### SHAPERSTUDY component
###

model.publishToShaperStudy()
import SHAPERSTUDY
Revolution_1_1, = SHAPERSTUDY.shape(model.featureStringId(Revolution_1))
Revolution_1_2, = SHAPERSTUDY.shape(model.featureStringId(Revolution_1, 1))
Revolution_2_1, = SHAPERSTUDY.shape(model.featureStringId(Revolution_2))
Revolution_3_1, = SHAPERSTUDY.shape(model.featureStringId(Revolution_3))
Revolution_3_2, = SHAPERSTUDY.shape(model.featureStringId(Revolution_3, 1))

###
### GEOM component
###

import GEOM
from salome.geom import geomBuilder
import math
import SALOMEDS


geompy = geomBuilder.New()

(imported, Revolution_1_1, [], [], []) = geompy.ImportXAO("/tmp/shaper_start_0.xao")
(imported, Revolution_1_2, [], [], []) = geompy.ImportXAO("/tmp/shaper_ConicNose.xao")
(imported, Revolution_2_1, [], [], []) = geompy.ImportXAO("/tmp/shaper_middle_1.xao")
(imported, Revolution_3_1, [], [], []) = geompy.ImportXAO("/tmp/shaper_middle_2.xao")
(imported, Revolution_3_2, [], [], []) = geompy.ImportXAO("/tmp/shaper_rear_2.xao")
start_0 = geompy.CreateGroup(Revolution_1_1, geompy.ShapeType["FACE"])
geompy.UnionList(start_0, [Revolution_1_1])
ConicNose = geompy.CreateGroup(Revolution_1_2, geompy.ShapeType["FACE"])
geompy.UnionList(ConicNose, [Revolution_1_2])
middle_1 = geompy.CreateGroup(Revolution_2_1, geompy.ShapeType["FACE"])
geompy.UnionList(middle_1, [Revolution_2_1])
middle_2 = geompy.CreateGroup(Revolution_3_1, geompy.ShapeType["FACE"])
geompy.UnionList(middle_2, [Revolution_3_1])
rear_2 = geompy.CreateGroup(Revolution_3_2, geompy.ShapeType["FACE"])
geompy.UnionList(rear_2, [Revolution_3_2])
ShellProjectile = geompy.MakeShell([Revolution_1_1, Revolution_1_2, Revolution_2_1, Revolution_3_1, Revolution_3_2])
Projectile = geompy.MakeSolid([ShellProjectile])
[Edge_1] = geompy.SubShapes(Projectile, [5])
[Vertex_3,Vertex_4,Vertex_5] = geompy.SubShapes(Projectile, [15, 10, 20])
geomObj_1 = geompy.MakeVertex(-200, 0, 0)
geomObj_2 = geompy.MakeVectorDXDYDZ(1, 0, 0)
geomObj_3 = geompy.MakeCylinder(geomObj_1, geomObj_2, 200, 475.9)
geomObj_4 = geompy.MakeCutList(geomObj_3, [Projectile], True)
geomObj_5 = geompy.CreateGroup(geomObj_4, geompy.ShapeType["FACE"])
geompy.UnionIDs(geomObj_5, [3, 10, 12])
geomObj_6 = geompy.CreateGroup(geomObj_4, geompy.ShapeType["FACE"])
geompy.UnionIDs(geomObj_6, [15, 22, 27, 32])
[geomObj_5, geomObj_6] = geompy.GetExistingSubObjects(geomObj_4, False)
ox = geompy.MakeVectorDXDYDZ(1, 0, 0)
Vertex_1 = geompy.MakeVertex(0, 0, 0)
geomObj_7 = geompy.MakeCylinder(Vertex_1, ox, 100, 300)
(imported, geomObj_8, [], [], []) = geompy.ImportXAO("/tmp/shaper_if8vzq4n.xao")
(imported, geomObj_9, [], [], []) = geompy.ImportXAO("/tmp/shaper_y2iu8i25.xao")
(imported, geomObj_10, [], [], []) = geompy.ImportXAO("/tmp/shaper_rksjn16x.xao")
(imported, geomObj_11, [], [], []) = geompy.ImportXAO("/tmp/shaper_7n7tcb_0.xao")
(imported, geomObj_12, [], [], []) = geompy.ImportXAO("/tmp/shaper_sdf784l5.xao")
oz = geompy.MakeVectorDXDYDZ(0, 0, 1)
oy = geompy.MakeVectorDXDYDZ(0, 1, 0)
geomObj_13 = geompy.MakeCutList(geomObj_7, [Projectile], True)
geomObj_14 = geompy.MakePlane(Vertex_3, ox, 2000)
geomObj_15 = geompy.MakePlane(Vertex_4, ox, 2000)
geomObj_16 = geompy.MakePlane(Vertex_5, ox, 2000)
Farfield_vertex = geompy.MakeVertex(-644, 0, 0)
Outer_domain = geompy.MakeCylinder(Farfield_vertex, ox, 741, 919.9)
Inner_Domain_vertex = geompy.MakeVertex(-10, 0, 0)
Inner_domain = geompy.MakeCylinder(Inner_Domain_vertex, ox, 24.3, 110)
Projectile_edge_9 = geompy.GetSubShape(Projectile, [9])
Projectile_edge_14 = geompy.GetSubShape(Projectile, [14])
geomObj_17 = geompy.MakeVertex(5, 0, 0)
Vertex_2 = geompy.MakeVertex(41.2, 0, 0)
Vertex_7 = geompy.MakeVertex(73.90000000000001, 0, 0)
Vertex_6 = geompy.MakeVertex(75, 0, 0)
geomObj_18 = geompy.GetFaceNearPoint(Projectile, Vertex_1)
Plane_1 = geompy.MakePlane(Inner_Domain_vertex, oz, 2000)
Plane_2 = geompy.MakePlane(geomObj_17, ox, 2000)
Plane_3 = geompy.MakePlane(Vertex_7, ox, 2000)
Plane_4 = geompy.MakePlane(Vertex_6, ox, 2000)
Plane_5 = geompy.MakePlane(Vertex_2, ox, 2000)
Inner_cut = geompy.MakeCutList(Inner_domain, [Projectile], True)
Partition_1 = geompy.MakePartition([Inner_cut], [Plane_1, Plane_2, Plane_3, Plane_4, Plane_5], [], [], geompy.ShapeType["SOLID"], 0, [], 0)
Outer_partition = geompy.MakePartition([Outer_domain], [Plane_1],[], [], geompy.ShapeType["SOLID"], 0, [], 0)
NoExtraEdges_1 = geompy.RemoveExtraEdges(Partition_1, True)
Partition_2 = geompy.MakePartition([Outer_domain], [NoExtraEdges_1], [], [], geompy.ShapeType["SOLID"], 0, [], 0)
[Outer_domain_1,Front,Solid_3,Section_0_0,Section_0_1,geomObj_19,Section_1_0,Section_1_1,Section_2_0,Section_2_1,Solid_11,Solid_12] = geompy.ExtractShapes(Partition_2, geompy.ShapeType["SOLID"], True)
inflation_0_0 = geompy.CreateGroup(Section_0_0, geompy.ShapeType["FACE"])
geompy.UnionIDs(inflation_0_0, [33])
inflation_0_1 = geompy.CreateGroup(Section_0_1, geompy.ShapeType["FACE"])
geompy.UnionIDs(inflation_0_1, [40])
inflation_1_0 = geompy.CreateGroup(Section_1_0, geompy.ShapeType["FACE"])
geompy.UnionIDs(inflation_1_0, [33])
inflation_1_1 = geompy.CreateGroup(Section_1_1, geompy.ShapeType["FACE"])
geompy.UnionIDs(inflation_1_1, [40])
inflation_5 = geompy.CreateGroup(Section_2_0, geompy.ShapeType["FACE"])
geompy.UnionIDs(inflation_5, [33])
inflation_6 = geompy.CreateGroup(Section_2_1, geompy.ShapeType["FACE"])
geompy.UnionIDs(inflation_6, [40])
Angular_0_0 = geompy.CreateGroup(Section_0_0, geompy.ShapeType["EDGE"])
geompy.UnionIDs(Angular_0_0, [10, 17, 29, 5])
Radial_0_0 = geompy.CreateGroup(Section_0_0, geompy.ShapeType["EDGE"])
geompy.UnionIDs(Radial_0_0, [15, 27, 24, 19])
Radial_0_1 = geompy.CreateGroup(Section_0_1, geompy.ShapeType["EDGE"])
geompy.UnionIDs(Radial_0_1, [22, 36, 26, 29])
Angular_0_1 = geompy.CreateGroup(Section_0_1, geompy.ShapeType["EDGE"])
geompy.UnionIDs(Angular_0_1, [8, 15, 12, 19, 24, 34])
Angular_1_0 = geompy.CreateGroup(Section_1_0, geompy.ShapeType["EDGE"])
geompy.UnionIDs(Angular_1_0, [29, 17])
geomObj_20 = geompy.CreateGroup(Section_1_0, geompy.ShapeType["EDGE"])
geompy.UnionIDs(geomObj_20, [24, 15, 27, 19])
geomObj_21 = geompy.CreateGroup(Section_1_1, geompy.ShapeType["EDGE"])
geompy.UnionIDs(geomObj_21, [22, 36, 26, 29])
Angular_1_1 = geompy.CreateGroup(Section_1_1, geompy.ShapeType["EDGE"])
geompy.UnionIDs(Angular_1_1, [24, 34, 8, 12, 19, 15])
geomObj_22 = geompy.MakeGlueEdges(Section_0_1, 1e-07)
geomObj_23 = geompy.GetSubShape(Partition_2, [129])
geomObj_24 = geompy.GetSubShape(Partition_2, [184])
[Outer_domain_1, Front, Solid_3, Section_0_0, Section_0_1, geomObj_19, Section_1_0, Section_1_1, Section_2_0, Section_2_1, Solid_11, Solid_12, geomObj_23, geomObj_24] = geompy.GetExistingSubObjects(Partition_2, False)
Radial_1_0 = geompy.CreateGroup(Section_1_0, geompy.ShapeType["EDGE"])
geompy.UnionIDs(Radial_1_0, [15, 19])
geompy.DifferenceIDs(Angular_1_0, [29, 17])
geompy.UnionIDs(Angular_1_0, [29, 17, 5, 10])
Radial_1_1 = geompy.CreateGroup(Section_1_1, geompy.ShapeType["EDGE"])
geompy.UnionIDs(Radial_1_1, [17, 27, 15, 22])
geompy.UnionIDs(inflation_0_1, [33])
geompy.UnionIDs(inflation_1_1, [33])
inflation_front = geompy.CreateGroup(Front, geompy.ShapeType["FACE"])
geompy.UnionIDs(inflation_front, [33, 30])
Radial_front = geompy.CreateGroup(Front, geompy.ShapeType["EDGE"])
geompy.UnionIDs(Radial_front, [15, 19])
Front_surf = geompy.CreateGroup(Front, geompy.ShapeType["EDGE"])
geompy.UnionIDs(Front_surf, [27, 23, 25])
Front_outer = geompy.CreateGroup(Front, geompy.ShapeType["EDGE"])
geompy.UnionIDs(Front_outer, [8, 12, 22, 10])
geomObj_25 = geompy.GetSubShape(Partition_2, [181])
Axial_2_0 = geompy.CreateGroup(Section_2_0, geompy.ShapeType["EDGE"])
geompy.UnionIDs(Axial_2_0, [12, 32, 8, 22])
Radial_2_0 = geompy.CreateGroup(Section_2_0, geompy.ShapeType["EDGE"])
geompy.UnionIDs(Radial_2_0, [15, 27, 24, 19])
Angular_2_0 = geompy.CreateGroup(Section_2_0, geompy.ShapeType["EDGE"])
geompy.UnionIDs(Angular_2_0, [10, 5, 17, 29])
geomObj_26 = geompy.GetSubShape(Partition_2, [177])
geomObj_27 = geompy.GetSubShape(Partition_2, [191])
geomObj_28 = geompy.GetSubShape(Partition_2, [107])
(imported, Revolution_1_1_1, [], [], []) = geompy.ImportXAO("/tmp/shaper_start_0.xao")
(imported, Revolution_1_2_1, [], [], []) = geompy.ImportXAO("/tmp/shaper_ConicNose.xao")
(imported, Revolution_2_1_1, [], [], []) = geompy.ImportXAO("/tmp/shaper_middle_1.xao")
(imported, Revolution_3_1_1, [], [], []) = geompy.ImportXAO("/tmp/shaper_middle_2.xao")
(imported, Revolution_3_2_1, [], [], []) = geompy.ImportXAO("/tmp/shaper_rear_2.xao")
start_0_1 = geompy.CreateGroup(Revolution_1_1_1, geompy.ShapeType["FACE"])
geompy.UnionList(start_0_1, [Revolution_1_1_1])
ConicNose_1 = geompy.CreateGroup(Revolution_1_2_1, geompy.ShapeType["FACE"])
geompy.UnionList(ConicNose_1, [Revolution_1_2_1])
middle_1_1 = geompy.CreateGroup(Revolution_2_1_1, geompy.ShapeType["FACE"])
geompy.UnionList(middle_1_1, [Revolution_2_1_1])
middle_2_1 = geompy.CreateGroup(Revolution_3_1_1, geompy.ShapeType["FACE"])
geompy.UnionList(middle_2_1, [Revolution_3_1_1])
rear_2_1 = geompy.CreateGroup(Revolution_3_2_1, geompy.ShapeType["FACE"])
geompy.UnionList(rear_2_1, [Revolution_3_2_1])
ShellProjectile_1 = geompy.MakeShell([Revolution_1_1_1, Revolution_1_2_1, Revolution_2_1_1, Revolution_3_1_1, Revolution_3_2_1])
Projectile_1 = geompy.MakeSolid([ShellProjectile_1])
[Edge_1_1] = geompy.SubShapes(Projectile_1, [5])
[Vertex_3_1,Vertex_4_1,Vertex_5_1] = geompy.SubShapes(Projectile_1, [15, 10, 20])
geomObj_29 = geompy.MakeVertex(-200, 0, 0)
geomObj_30 = geompy.MakeVectorDXDYDZ(1, 0, 0)
geomObj_31 = geompy.MakeCylinder(geomObj_29, geomObj_30, 200, 475.9)
geomObj_32 = geompy.MakeCutList(geomObj_31, [Projectile_1], True)
geomObj_33 = geompy.CreateGroup(geomObj_32, geompy.ShapeType["FACE"])
geompy.UnionIDs(geomObj_33, [3, 10, 12])
geomObj_34 = geompy.CreateGroup(geomObj_32, geompy.ShapeType["FACE"])
geompy.UnionIDs(geomObj_34, [15, 22, 27, 32])
[geomObj_33, geomObj_34] = geompy.GetExistingSubObjects(geomObj_32, False)
ox_1 = geompy.MakeVectorDXDYDZ(1, 0, 0)
Vertex_1_1 = geompy.MakeVertex(0, 0, 0)
geomObj_35 = geompy.MakeCylinder(Vertex_1_1, ox_1, 100, 300)
(imported, geomObj_36, [], [], []) = geompy.ImportXAO("/tmp/shaper_if8vzq4n.xao")
(imported, geomObj_37, [], [], []) = geompy.ImportXAO("/tmp/shaper_y2iu8i25.xao")
(imported, geomObj_38, [], [], []) = geompy.ImportXAO("/tmp/shaper_rksjn16x.xao")
(imported, geomObj_39, [], [], []) = geompy.ImportXAO("/tmp/shaper_7n7tcb_0.xao")
(imported, geomObj_40, [], [], []) = geompy.ImportXAO("/tmp/shaper_sdf784l5.xao")
oz_1 = geompy.MakeVectorDXDYDZ(0, 0, 1)
oy_1 = geompy.MakeVectorDXDYDZ(0, 1, 0)
geomObj_41 = geompy.MakeCutList(geomObj_35, [Projectile_1], True)
geomObj_42 = geompy.MakePlane(Vertex_3_1, ox_1, 2000)
geomObj_43 = geompy.MakePlane(Vertex_4_1, ox_1, 2000)
geomObj_44 = geompy.MakePlane(Vertex_5_1, ox_1, 2000)
Farfield_vertex_1 = geompy.MakeVertex(-644, 0, 0)
Outer_domain_2 = geompy.MakeCylinder(Farfield_vertex_1, ox_1, 741, 919.9)
Inner_Domain_vertex_1 = geompy.MakeVertex(-10, 0, 0)
Inner_domain_1 = geompy.MakeCylinder(Inner_Domain_vertex_1, ox_1, 24.3, 110)
Projectile_edge_9_1 = geompy.GetSubShape(Projectile_1, [9])
Projectile_edge_14_1 = geompy.GetSubShape(Projectile_1, [14])
geomObj_45 = geompy.MakeVertex(5, 0, 0)
Vertex_2_1 = geompy.MakeVertex(41.2, 0, 0)
Vertex_7_1 = geompy.MakeVertex(73.90000000000001, 0, 0)
Vertex_6_1 = geompy.MakeVertex(80, 0, 0)
geomObj_46 = geompy.GetFaceNearPoint(Projectile_1, Vertex_1_1)
Plane_1_1 = geompy.MakePlane(Inner_Domain_vertex_1, oz_1, 2000)
Plane_2_1 = geompy.MakePlane(geomObj_45, ox_1, 2000)
Plane_3_1 = geompy.MakePlane(Vertex_7_1, ox_1, 2000)
Plane_4_1 = geompy.MakePlane(Vertex_6_1, ox_1, 2000)
Plane_5_1 = geompy.MakePlane(Vertex_2_1, ox_1, 2000)
Inner_cut_1 = geompy.MakeCutList(Inner_domain_1, [Projectile_1], True)
Partition_1_1 = geompy.MakePartition([Inner_cut_1], [Plane_1_1, Plane_2_1, Plane_3_1, Plane_4_1, Plane_5_1], [], [], geompy.ShapeType["SOLID"], 0, [], 0)
NoExtraEdges_1_1 = geompy.RemoveExtraEdges(Partition_1_1, True)
Partition_2_1 = geompy.MakePartition([Outer_domain_2], [NoExtraEdges_1_1], [], [], geompy.ShapeType["SOLID"], 0, [], 0)
[Outer_domain_3,Front_1,Solid_3_1,Section_0_0_1,Section_0_1_1,geomObj_47,Section_1_0_1,Section_1_1_1,Rear,Section_2_1_1,Wake,Solid_12_1] = geompy.ExtractShapes(Partition_2_1, geompy.ShapeType["SOLID"], True)
inflation_0_0_1 = geompy.CreateGroup(Section_0_0_1, geompy.ShapeType["FACE"])
geompy.UnionIDs(inflation_0_0_1, [33])
inflation_0_1_1 = geompy.CreateGroup(Section_0_1_1, geompy.ShapeType["FACE"])
geompy.UnionIDs(inflation_0_1_1, [40])
inflation_1_0_1 = geompy.CreateGroup(Section_1_0_1, geompy.ShapeType["FACE"])
geompy.UnionIDs(inflation_1_0_1, [33])
inflation_1_1_1 = geompy.CreateGroup(Section_1_1_1, geompy.ShapeType["FACE"])
geompy.UnionIDs(inflation_1_1_1, [40])
geomObj_48 = geompy.CreateGroup(Rear, geompy.ShapeType["FACE"])
geompy.UnionIDs(geomObj_48, [33])
inflation_6_1 = geompy.CreateGroup(Section_2_1_1, geompy.ShapeType["FACE"])
geompy.UnionIDs(inflation_6_1, [40])
Angular_0_0_1 = geompy.CreateGroup(Section_0_0_1, geompy.ShapeType["EDGE"])
geompy.UnionIDs(Angular_0_0_1, [10, 17, 29, 5])
Radial_0_0_1 = geompy.CreateGroup(Section_0_0_1, geompy.ShapeType["EDGE"])
geompy.UnionIDs(Radial_0_0_1, [15, 27, 24, 19])
Radial_0_1_1 = geompy.CreateGroup(Section_0_1_1, geompy.ShapeType["EDGE"])
geompy.UnionIDs(Radial_0_1_1, [22, 36, 26, 29])
Angular_0_1_1 = geompy.CreateGroup(Section_0_1_1, geompy.ShapeType["EDGE"])
geompy.UnionIDs(Angular_0_1_1, [8, 15, 12, 19, 24, 34])
Angular_1_0_1 = geompy.CreateGroup(Section_1_0_1, geompy.ShapeType["EDGE"])
geompy.UnionIDs(Angular_1_0_1, [29, 17])
geomObj_49 = geompy.CreateGroup(Section_1_0_1, geompy.ShapeType["EDGE"])
geompy.UnionIDs(geomObj_49, [24, 15, 27, 19])
geomObj_50 = geompy.CreateGroup(Section_1_1_1, geompy.ShapeType["EDGE"])
geompy.UnionIDs(geomObj_50, [22, 36, 26, 29])
Angular_1_1_1 = geompy.CreateGroup(Section_1_1_1, geompy.ShapeType["EDGE"])
geompy.UnionIDs(Angular_1_1_1, [24, 34, 8, 12, 19, 15])
geomObj_51 = geompy.MakeGlueEdges(Section_0_1_1, 1e-07)
geomObj_52 = geompy.GetSubShape(Partition_2_1, [129])
geomObj_53 = geompy.GetSubShape(Partition_2_1, [184])
[Outer_domain_3, Front_1, Solid_3_1, Section_0_0_1, Section_0_1_1, geomObj_47, Section_1_0_1, Section_1_1_1, Rear, Section_2_1_1, Wake, Solid_12_1, geomObj_52, geomObj_53] = geompy.GetExistingSubObjects(Partition_2_1, False)
Radial_1_0_1 = geompy.CreateGroup(Section_1_0_1, geompy.ShapeType["EDGE"])
geompy.UnionIDs(Radial_1_0_1, [15, 19])
geompy.DifferenceIDs(Angular_1_0_1, [29, 17])
geompy.UnionIDs(Angular_1_0_1, [29, 17, 5, 10])
Radial_1_1_1 = geompy.CreateGroup(Section_1_1_1, geompy.ShapeType["EDGE"])
geompy.UnionIDs(Radial_1_1_1, [17, 27, 15, 22])
geompy.UnionIDs(inflation_0_1_1, [33])
geompy.UnionIDs(inflation_1_1_1, [33])
inflation_front_1 = geompy.CreateGroup(Front_1, geompy.ShapeType["FACE"])
geompy.UnionIDs(inflation_front_1, [33, 30])
Radial_front_1 = geompy.CreateGroup(Front_1, geompy.ShapeType["EDGE"])
geompy.UnionIDs(Radial_front_1, [15, 19])
Front_surf_1 = geompy.CreateGroup(Front_1, geompy.ShapeType["EDGE"])
geompy.UnionIDs(Front_surf_1, [27, 23, 25])
Front_outer_1 = geompy.CreateGroup(Front_1, geompy.ShapeType["EDGE"])
geompy.UnionIDs(Front_outer_1, [8, 12, 22, 10])
geomObj_54 = geompy.GetSubShape(Partition_2_1, [181])
geomObj_55 = geompy.CreateGroup(Rear, geompy.ShapeType["EDGE"])
geompy.UnionIDs(geomObj_55, [12, 32, 8, 22])
geomObj_56 = geompy.CreateGroup(Rear, geompy.ShapeType["EDGE"])
geompy.UnionIDs(geomObj_56, [15, 27, 24, 19])
geomObj_57 = geompy.CreateGroup(Rear, geompy.ShapeType["EDGE"])
geompy.UnionIDs(geomObj_57, [10, 5, 17, 29])
geomObj_58 = geompy.GetSubShape(Partition_2_1, [177])
geomObj_59 = geompy.GetSubShape(Partition_2_1, [191])
geomObj_60 = geompy.GetSubShape(Partition_2_1, [107])
[Outer_domain_3, Front_1, Solid_3_1, Section_0_0_1, Section_0_1_1, geomObj_47, Section_1_0_1, Section_1_1_1, Rear, Section_2_1_1, Wake, Solid_12_1, geomObj_52, geomObj_53, geomObj_54, geomObj_58, geomObj_59, geomObj_60] = geompy.GetExistingSubObjects(Partition_2_1, False)
geompy.DifferenceIDs(geomObj_56, [15, 27, 24, 19])
geompy.UnionIDs(geomObj_56, [15, 19])
geomObj_61 = geompy.CreateGroup(Wake, geompy.ShapeType["FACE"])
geompy.UnionIDs(geomObj_61, [33, 30])
geomObj_62 = geompy.CreateGroup(Wake, geompy.ShapeType["EDGE"])
geompy.UnionIDs(geomObj_62, [15, 8, 12])
geomObj_63 = geompy.CreateGroup(Wake, geompy.ShapeType["EDGE"])
geompy.UnionIDs(geomObj_63, [24, 20, 22])
geomObj_64 = geompy.GetSubShape(Partition_2_1, [120])
geomObj_65 = geompy.GetSubShape(Partition_2_1, [110])
geomObj_66 = geompy.GetSubShape(Partition_2_1, [96])
[Outer_domain_3, Front_1, Solid_3_1, Section_0_0_1, Section_0_1_1, geomObj_47, Section_1_0_1, Section_1_1_1, Rear, Section_2_1_1, Wake, Solid_12_1, geomObj_52, geomObj_53, geomObj_54, geomObj_58, geomObj_59, geomObj_60, geomObj_64, geomObj_65, geomObj_66] = geompy.GetExistingSubObjects(Partition_2_1, False)
inflation_rear = geompy.CreateGroup(Rear, geompy.ShapeType["FACE"])
geompy.UnionIDs(inflation_rear, [30, 33])
rear_outer = geompy.CreateGroup(Rear, geompy.ShapeType["EDGE"])
geompy.UnionIDs(rear_outer, [15, 8, 12])
rear_surf = geompy.CreateGroup(Rear, geompy.ShapeType["EDGE"])
geompy.UnionIDs(rear_surf, [22, 20, 24])
geompy.addToStudy( Revolution_1_1, 'Revolution_1_1' )
geompy.addToStudy( Revolution_1_2, 'Revolution_1_2' )
geompy.addToStudy( Revolution_2_1, 'Revolution_2_1' )
geompy.addToStudy( Revolution_3_1, 'Revolution_3_1' )
geompy.addToStudy( Revolution_3_2, 'Revolution_3_2' )
geompy.addToStudyInFather( Revolution_1_1, start_0, 'start_0' )
geompy.addToStudyInFather( Revolution_1_2, ConicNose, 'ConicNose' )
geompy.addToStudyInFather( Revolution_2_1, middle_1, 'middle_1' )
geompy.addToStudyInFather( Revolution_3_1, middle_2, 'middle_2' )
geompy.addToStudyInFather( Revolution_3_2, rear_2, 'rear_2' )
geompy.addToStudy( ShellProjectile, 'ShellProjectile' )
geompy.addToStudy( Projectile, 'Projectile' )
geompy.addToStudyInFather( Projectile, Edge_1, 'Edge_1' )
geompy.addToStudyInFather( Projectile, Vertex_3, 'Vertex_3' )
geompy.addToStudyInFather( Projectile, Vertex_4, 'Vertex_4' )
geompy.addToStudyInFather( Projectile, Vertex_5, 'Vertex_5' )
geompy.addToStudy( ox, 'ox' )
geompy.addToStudy( Vertex_1, 'Vertex_1' )
geompy.addToStudy( oz, 'oz' )
geompy.addToStudy( oy, 'oy' )
geompy.addToStudy( Farfield_vertex, 'Farfield_vertex' )
geompy.addToStudy( Outer_domain, 'Outer_domain' )
geompy.addToStudy( Inner_Domain_vertex, 'Inner_Domain_vertex' )
geompy.addToStudy( Inner_domain, 'Inner_domain' )
geompy.addToStudyInFather( Projectile, Projectile_edge_9, 'Projectile:edge_9' )
geompy.addToStudyInFather( Projectile, Projectile_edge_14, 'Projectile:edge_14' )
geompy.addToStudy( Vertex_2, 'Vertex_2' )
geompy.addToStudy( Vertex_7, 'Vertex_7' )
geompy.addToStudy( Vertex_6, 'Vertex_6' )
geompy.addToStudy( Plane_1, 'Plane_1' )
geompy.addToStudy( Plane_2, 'Plane_2' )
geompy.addToStudy( Plane_3, 'Plane_3' )
geompy.addToStudy( Plane_4, 'Plane_4' )
geompy.addToStudy( Plane_5, 'Plane_5' )
geompy.addToStudy( Inner_cut, 'Inner_cut' )
geompy.addToStudy( Partition_1, 'Partition_1' )
geompy.addToStudy( NoExtraEdges_1, 'NoExtraEdges_1' )
geompy.addToStudy( Partition_2, 'Partition_2' )
geompy.addToStudyInFather( Partition_2, Outer_domain_1, 'Outer_domain' )
geompy.addToStudyInFather( Partition_2, Front, 'Front' )
geompy.addToStudyInFather( Partition_2, Solid_3, 'Solid_3' )
geompy.addToStudyInFather( Partition_2, Section_0_0, 'Section_0_0' )
geompy.addToStudyInFather( Partition_2, Section_0_1, 'Section_0_1' )
geompy.addToStudyInFather( Partition_2, Section_1_0, 'Section_1_0' )
geompy.addToStudyInFather( Partition_2, Section_1_1, 'Section_1_1' )
geompy.addToStudyInFather( Partition_2, Section_2_0, 'Section_2_0' )
geompy.addToStudyInFather( Partition_2, Section_2_1, 'Section_2_1' )
geompy.addToStudyInFather( Partition_2, Solid_11, 'Solid_11' )
geompy.addToStudyInFather( Partition_2, Solid_12, 'Solid_12' )
geompy.addToStudyInFather( Section_0_0, inflation_0_0, 'inflation_0_0' )
geompy.addToStudyInFather( Section_0_1, inflation_0_1, 'inflation_0_1' )
geompy.addToStudyInFather( Section_1_0, inflation_1_0, 'inflation_1_0' )
geompy.addToStudyInFather( Section_1_1, inflation_1_1, 'inflation_1_1' )
geompy.addToStudyInFather( Section_2_0, inflation_5, 'inflation_5' )
geompy.addToStudyInFather( Section_2_1, inflation_6, 'inflation_6' )
geompy.addToStudyInFather( Section_0_0, Angular_0_0, 'Angular_0_0' )
geompy.addToStudyInFather( Section_0_0, Radial_0_0, 'Radial_0_0' )
geompy.addToStudyInFather( Section_0_1, Radial_0_1, 'Radial_0_1' )
geompy.addToStudyInFather( Section_0_1, Angular_0_1, 'Angular_0_1' )
geompy.addToStudyInFather( Section_1_0, Angular_1_0, 'Angular_1_0' )
geompy.addToStudyInFather( Section_1_1, Angular_1_1, 'Angular_1_1' )
geompy.addToStudyInFather( Section_1_0, Radial_1_0, 'Radial_1_0' )
geompy.addToStudyInFather( Section_1_1, Radial_1_1, 'Radial_1_1' )
geompy.addToStudyInFather( Front, inflation_front, 'inflation_front' )
geompy.addToStudyInFather( Front, Radial_front, 'Radial_front' )
geompy.addToStudyInFather( Front, Front_surf, 'Front_surf' )
geompy.addToStudyInFather( Front, Front_outer, 'Front_outer' )
geompy.addToStudyInFather( Section_2_0, Axial_2_0, 'Axial_2_0' )
geompy.addToStudyInFather( Section_2_0, Radial_2_0, 'Radial_2_0' )
geompy.addToStudyInFather( Section_2_0, Angular_2_0, 'Angular_2_0' )
geompy.addToStudy( Revolution_1_1_1, 'Revolution_1_1' )
geompy.addToStudy( Revolution_1_2_1, 'Revolution_1_2' )
geompy.addToStudy( Revolution_2_1_1, 'Revolution_2_1' )
geompy.addToStudy( Revolution_3_1_1, 'Revolution_3_1' )
geompy.addToStudy( Revolution_3_2_1, 'Revolution_3_2' )
geompy.addToStudyInFather( Revolution_1_1_1, start_0_1, 'start_0' )
geompy.addToStudyInFather( Revolution_1_2_1, ConicNose_1, 'ConicNose' )
geompy.addToStudyInFather( Revolution_2_1_1, middle_1_1, 'middle_1' )
geompy.addToStudyInFather( Revolution_3_1_1, middle_2_1, 'middle_2' )
geompy.addToStudyInFather( Revolution_3_2_1, rear_2_1, 'rear_2' )
geompy.addToStudy( ShellProjectile_1, 'ShellProjectile' )
geompy.addToStudy( Projectile_1, 'Projectile' )
geompy.addToStudyInFather( Projectile_1, Edge_1_1, 'Edge_1' )
geompy.addToStudyInFather( Projectile_1, Vertex_3_1, 'Vertex_3' )
geompy.addToStudyInFather( Projectile_1, Vertex_4_1, 'Vertex_4' )
geompy.addToStudyInFather( Projectile_1, Vertex_5_1, 'Vertex_5' )
geompy.addToStudy( ox_1, 'ox' )
geompy.addToStudy( Vertex_1_1, 'Vertex_1' )
geompy.addToStudy( oz_1, 'oz' )
geompy.addToStudy( oy_1, 'oy' )
geompy.addToStudy( Farfield_vertex_1, 'Farfield_vertex' )
geompy.addToStudy( Outer_domain_2, 'Outer_domain' )
geompy.addToStudy( Inner_Domain_vertex_1, 'Inner_Domain_vertex' )
geompy.addToStudy( Inner_domain_1, 'Inner_domain' )
geompy.addToStudyInFather( Projectile_1, Projectile_edge_9_1, 'Projectile:edge_9' )
geompy.addToStudyInFather( Projectile_1, Projectile_edge_14_1, 'Projectile:edge_14' )
geompy.addToStudy( Vertex_2_1, 'Vertex_2' )
geompy.addToStudy( Vertex_7_1, 'Vertex_7' )
geompy.addToStudy( Vertex_6_1, 'Vertex_6' )
geompy.addToStudy( Plane_1_1, 'Plane_1' )
geompy.addToStudy( Plane_2_1, 'Plane_2' )
geompy.addToStudy( Plane_3_1, 'Plane_3' )
geompy.addToStudy( Plane_4_1, 'Plane_4' )
geompy.addToStudy( Plane_5_1, 'Plane_5' )
geompy.addToStudy( Inner_cut_1, 'Inner_cut' )
geompy.addToStudy( Partition_1_1, 'Partition_1' )
geompy.addToStudy( NoExtraEdges_1_1, 'NoExtraEdges_1' )
geompy.addToStudy( Partition_2_1, 'Partition_2' )
geompy.addToStudyInFather( Partition_2_1, Outer_domain_3, 'Outer_domain' )
geompy.addToStudyInFather( Partition_2_1, Front_1, 'Front' )
geompy.addToStudyInFather( Partition_2_1, Solid_3_1, 'Solid_3' )
geompy.addToStudyInFather( Partition_2_1, Section_0_0_1, 'Section_0_0' )
geompy.addToStudyInFather( Partition_2_1, Section_0_1_1, 'Section_0_1' )
geompy.addToStudyInFather( Partition_2_1, Section_1_0_1, 'Section_1_0' )
geompy.addToStudyInFather( Partition_2_1, Section_1_1_1, 'Section_1_1' )
geompy.addToStudyInFather( Partition_2_1, Rear, 'Rear' )
geompy.addToStudyInFather( Partition_2_1, Section_2_1_1, 'Section_2_1' )
geompy.addToStudyInFather( Partition_2_1, Wake, 'Wake' )
geompy.addToStudyInFather( Partition_2_1, Solid_12_1, 'Solid_12' )
geompy.addToStudyInFather( Section_0_0_1, inflation_0_0_1, 'inflation_0_0' )
geompy.addToStudyInFather( Section_0_1_1, inflation_0_1_1, 'inflation_0_1' )
geompy.addToStudyInFather( Section_1_0_1, inflation_1_0_1, 'inflation_1_0' )
geompy.addToStudyInFather( Section_1_1_1, inflation_1_1_1, 'inflation_1_1' )
geompy.addToStudyInFather( Section_2_1_1, inflation_6_1, 'inflation_6' )
geompy.addToStudyInFather( Section_0_0_1, Angular_0_0_1, 'Angular_0_0' )
geompy.addToStudyInFather( Section_0_0_1, Radial_0_0_1, 'Radial_0_0' )
geompy.addToStudyInFather( Section_0_1_1, Radial_0_1_1, 'Radial_0_1' )
geompy.addToStudyInFather( Section_0_1_1, Angular_0_1_1, 'Angular_0_1' )
geompy.addToStudyInFather( Section_1_0_1, Angular_1_0_1, 'Angular_1_0' )
geompy.addToStudyInFather( Section_1_1_1, Angular_1_1_1, 'Angular_1_1' )
geompy.addToStudyInFather( Section_1_0_1, Radial_1_0_1, 'Radial_1_0' )
geompy.addToStudyInFather( Section_1_1_1, Radial_1_1_1, 'Radial_1_1' )
geompy.addToStudyInFather( Front_1, inflation_front_1, 'inflation_front' )
geompy.addToStudyInFather( Front_1, Radial_front_1, 'Radial_front' )
geompy.addToStudyInFather( Front_1, Front_surf_1, 'Front_surf' )
geompy.addToStudyInFather( Front_1, Front_outer_1, 'Front_outer' )
geompy.addToStudyInFather( Rear, inflation_rear, 'inflation_rear' )
geompy.addToStudyInFather( Rear, rear_outer, 'rear_outer' )
geompy.addToStudyInFather( Rear, rear_surf, 'rear_surf' )

###
### SMESH component
###

import  SMESH, SALOMEDS
from salome.smesh import smeshBuilder

smesh = smeshBuilder.New()
#smesh.SetEnablePublish( False ) # Set to False to avoid publish in study if not needed or in some particular situations:
                                 # multiples meshes built in parallel, complex and numerous mesh edition (performance)

Equi_dist = smesh.CreateHypothesis('NumberOfSegments')
Equi_dist.SetReversedEdges( [] )
Equi_dist.SetObjectEntry( "Partition_2_1" )
ViscousLayers_1 = smesh.CreateHypothesis('ViscousLayers')
ViscousLayers_2 = smesh.CreateHypothesis('ViscousLayers')
Radial_scale_0 = smesh.CreateHypothesis('NumberOfSegments')
Radial_scale_1 = smesh.CreateHypothesis('NumberOfSegments')
Viscous_Layers_front = smesh.CreateHypothesis('ViscousLayers')
Sizing_surf = smesh.CreateHypothesis('LocalLength')
Equi_dist.SetNumberOfSegments( 20 )
ViscousLayers_1.SetTotalThickness( 1 )
ViscousLayers_1.SetNumberLayers( 30 )
ViscousLayers_1.SetStretchFactor( 1.2 )
ViscousLayers_1.SetMethod( smeshBuilder.SURF_OFFSET_SMOOTH )
ViscousLayers_1.SetFaces( [ 154 ], 0 )
Radial_scale_0.SetNumberOfSegments( 20 )
Radial_scale_0.SetScaleFactor( 10 )
Radial_scale_0.SetReversedEdges( [ 177, 191 ] )
Radial_scale_0.SetObjectEntry( "Partition_2_1" )
Radial_scale_1.SetNumberOfSegments( 20 )
Radial_scale_1.SetScaleFactor( 4 )
Radial_scale_1.SetReversedEdges( [ 107 ] )
Radial_scale_1.SetObjectEntry( "Partition_2_1" )
Sizing_outer = smesh.CreateHypothesis('LocalLength')
ViscousLayers_2.SetTotalThickness( 1 )
ViscousLayers_2.SetNumberLayers( 30 )
ViscousLayers_2.SetStretchFactor( 1.2 )
ViscousLayers_2.SetMethod( smeshBuilder.FACE_OFFSET )
ViscousLayers_2.SetFaces( [ 144 ], 0 )
Viscous_Layers_front.SetTotalThickness( 1 )
Viscous_Layers_front.SetNumberLayers( 30 )
Viscous_Layers_front.SetStretchFactor( 1.2 )
Viscous_Layers_front.SetMethod( smeshBuilder.FACE_OFFSET )
Viscous_Layers_front.SetFaces( [ 170, 164 ], 0 )
Viscous_Layers_rear = smesh.CreateHypothesis('ViscousLayers')
Viscous_Layers_rear.SetTotalThickness( 1 )
Viscous_Layers_rear.SetNumberLayers( 30 )
Viscous_Layers_rear.SetStretchFactor( 1.2 )
Viscous_Layers_rear.SetFaces( [ 126, 123 ], 0 )
Viscous_Layers_rear.SetMethod( smeshBuilder.FACE_OFFSET )
Sizing_surf.SetLength( 0.3 )
Sizing_surf.SetPrecision( 1e-07 )
Sizing_outer.SetLength( 3 )
Sizing_outer.SetPrecision( 1e-07 )
Sizing_outer.SetLength( 3 )
Sizing_outer.SetPrecision( 1e-07 )
Mesh_1 = smesh.Mesh(Partition_2_1,'Mesh_1')
Outer_domain_4 = Mesh_1.GroupOnGeom(Outer_domain_3,'Outer_domain',SMESH.VOLUME)
Front_2 = Mesh_1.GroupOnGeom(Front_1,'Front',SMESH.VOLUME)
Solid_3_2 = Mesh_1.GroupOnGeom(Solid_3_1,'Solid_3',SMESH.VOLUME)
Section_0_0_2 = Mesh_1.GroupOnGeom(Section_0_0_1,'Section_0_0',SMESH.VOLUME)
Section_0_1_2 = Mesh_1.GroupOnGeom(Section_0_1_1,'Section_0_1',SMESH.VOLUME)
#Group_6 = Mesh_1.GroupOnGeom(__NOT__Published__Object__,'',SMESH.VOLUME)
Section_1_0_2 = Mesh_1.GroupOnGeom(Section_1_0_1,'Section_1_0',SMESH.VOLUME)
Section_1_1_2 = Mesh_1.GroupOnGeom(Section_1_1_1,'Section_1_1',SMESH.VOLUME)
Rear_1 = Mesh_1.GroupOnGeom(Rear,'Rear',SMESH.VOLUME)
Section_2_1_2 = Mesh_1.GroupOnGeom(Section_2_1_1,'Section_2_1',SMESH.VOLUME)
Wake_1 = Mesh_1.GroupOnGeom(Wake,'Wake',SMESH.VOLUME)
Solid_12_2 = Mesh_1.GroupOnGeom(Solid_12_1,'Solid_12',SMESH.VOLUME)
ViscousLayers_1.SetTotalThickness( 1 )
ViscousLayers_1.SetNumberLayers( 30 )
ViscousLayers_1.SetStretchFactor( 1.2 )
ViscousLayers_1.SetMethod( smeshBuilder.SURF_OFFSET_SMOOTH )
ViscousLayers_1.SetFaces( [ 155 ], 0 )
Regular_1D = Mesh_1.Segment(geom=Section_0_0_1)
Section_0 = Regular_1D.GetSubMesh()
status = Mesh_1.AddHypothesis(Equi_dist,Section_0_0_1)
Quadrangle_2D = Mesh_1.Quadrangle(algo=smeshBuilder.QUADRANGLE,geom=Section_0_0_1)
Hexa_3D = Mesh_1.Hexahedron(algo=smeshBuilder.Hexa,geom=Section_0_0_1)
status = Mesh_1.AddHypothesis(ViscousLayers_1,Section_0_0_1)
ViscousLayers_2.SetTotalThickness( 1 )
ViscousLayers_2.SetNumberLayers( 30 )
ViscousLayers_2.SetStretchFactor( 1.2 )
ViscousLayers_2.SetMethod( smeshBuilder.FACE_OFFSET )
ViscousLayers_2.SetFaces( [ 144 ], 0 )
Regular_1D_1 = Mesh_1.Segment(geom=Section_1_0_1)
Section_1 = Regular_1D_1.GetSubMesh()
status = Mesh_1.AddHypothesis(Equi_dist,Section_1_0_1)
Quadrangle_2D_1 = Mesh_1.Quadrangle(algo=smeshBuilder.QUADRANGLE,geom=Section_1_0_1)
Hexa_3D_1 = Mesh_1.Hexahedron(algo=smeshBuilder.Hexa,geom=Section_1_0_1)
status = Mesh_1.AddHypothesis(ViscousLayers_2,Section_1_0_1)
isDone = Mesh_1.SetMeshOrder( [ [ Section_0, Section_1 ] ])
Regular_1D_2 = Mesh_1.Segment(geom=Front_1)
Front_3 = Regular_1D_2.GetSubMesh()
status = Mesh_1.AddHypothesis(Equi_dist,Front_1)
NETGEN_2D = Mesh_1.Triangle(algo=smeshBuilder.NETGEN_2D,geom=Front_1)
NETGEN_3D = Mesh_1.Tetrahedron(geom=Front_1)
status = Mesh_1.AddHypothesis(Viscous_Layers_front,Front_1)
isDone = Mesh_1.SetMeshOrder( [ [ Section_0, Section_1, Front_3 ] ])
Radial_scale_0.SetNumberOfSegments( 20 )
Radial_scale_0.SetScaleFactor( 10 )
Radial_scale_0.SetReversedEdges( [ 128, 178 ] )
Radial_scale_0.SetObjectEntry( "Partition_2_1" )
Regular_1D_3 = Mesh_1.Segment(geom=Radial_0_0_1)
Radial_0 = Regular_1D_3.GetSubMesh()
status = Mesh_1.AddHypothesis(Radial_scale_0,Radial_0_0_1)
isDone = Mesh_1.SetMeshOrder( [ [ Radial_0, Section_0, Section_1, Front_3 ] ])
Radial_scale_1.SetNumberOfSegments( 20 )
Radial_scale_1.SetScaleFactor( 4 )
Radial_scale_1.SetReversedEdges( [ 93 ] )
Radial_scale_1.SetObjectEntry( "Partition_2_1" )
Regular_1D_4 = Mesh_1.Segment(geom=Radial_1_0_1)
Radial_1 = Regular_1D_4.GetSubMesh()
status = Mesh_1.AddHypothesis(Radial_scale_1,Radial_1_0_1)
isDone = Mesh_1.SetMeshOrder( [ [ Radial_0, Radial_1, Section_0, Section_1, Front_3 ] ])
Regular_1D_5 = Mesh_1.Segment(geom=Front_outer_1)
front_outer_sizing = Regular_1D_5.GetSubMesh()
status = Mesh_1.AddHypothesis(Sizing_outer,Front_outer_1)
isDone = Mesh_1.SetMeshOrder( [ [ Radial_0, Radial_1, front_outer_sizing, Section_0, Section_1, Front_3 ] ])
Regular_1D_6 = Mesh_1.Segment(geom=Front_surf_1)
front_surf_sizing = Regular_1D_6.GetSubMesh()
status = Mesh_1.AddHypothesis(Sizing_surf,Front_surf_1)
isDone = Mesh_1.SetMeshOrder( [ [ Radial_0, Radial_1, front_outer_sizing, front_surf_sizing, Section_0, Section_1, Front_3 ] ])

Regular_1D_7 = Mesh_1.Segment(geom=Rear)
Rear_2 = Regular_1D_7.GetSubMesh()
status = Mesh_1.AddHypothesis(Equi_dist,Rear)
NETGEN_2D_1 = Mesh_1.Triangle(algo=smeshBuilder.NETGEN_2D,geom=Rear)
NETGEN_3D_1 = Mesh_1.Tetrahedron(geom=Rear)
status = Mesh_1.AddHypothesis(Viscous_Layers_rear,Rear)
isDone = Mesh_1.SetMeshOrder( [ [ Radial_0, Radial_1, front_outer_sizing, front_surf_sizing, Section_0, Section_1, Front_3, Rear_2 ] ])
Regular_1D_8 = Mesh_1.Segment(geom=rear_outer)
Rear_outer_sizing = Regular_1D_8.GetSubMesh()
status = Mesh_1.AddHypothesis(Sizing_outer,rear_outer)
isDone = Mesh_1.SetMeshOrder( [ [ Radial_0, Radial_1, front_outer_sizing, front_surf_sizing, Rear_outer_sizing, Section_0, Section_1, Front_3, Rear_2 ] ])
Sizing_surf.SetLength( 0.3 )
Sizing_surf.SetPrecision( 1e-07 )
Regular_1D_9 = Mesh_1.Segment(geom=rear_surf)
Rear_surf_sizing = Regular_1D_9.GetSubMesh()
status = Mesh_1.AddHypothesis(Sizing_surf,rear_surf)
isDone = Mesh_1.SetMeshOrder( [ [ Radial_0, Radial_1, front_outer_sizing, front_surf_sizing, Rear_outer_sizing, Rear_surf_sizing, Section_0, Section_1, Front_3, Rear_2 ] ])
NETGEN_3D_2 = Mesh_1.Tetrahedron(geom=Wake)
Wake_2 = NETGEN_3D_2.GetSubMesh()
NETGEN_3D_Parameters_1 = NETGEN_3D_2.Parameters()
NETGEN_3D_Parameters_1.SetMaxSize( 10 )
NETGEN_3D_Parameters_1.SetMinSize( 4.23577 )
NETGEN_3D_Parameters_1.SetOptimize( 1 )
NETGEN_3D_Parameters_1.SetFineness( 2 )
NETGEN_3D_Parameters_1.SetElemSizeWeight( 4.67329e-310 )
NETGEN_3D_Parameters_1.SetCheckOverlapping( 5 )
NETGEN_3D_Parameters_1.SetCheckChartBoundary( 3 )

status = Mesh_1.RemoveHypothesis(NETGEN_3D,Wake)
NETGEN_1D_2D_3D = Mesh_1.Tetrahedron(algo=smeshBuilder.NETGEN_1D2D3D,geom=Wake)
status = Mesh_1.RemoveHypothesis(NETGEN_3D_Parameters_1,Wake)
NETGEN_3D_Parameters_1_1 = NETGEN_1D_2D_3D.Parameters()
NETGEN_3D_Parameters_1_1.SetMaxSize( 30 )
NETGEN_3D_Parameters_1_1.SetMinSize( 4.23577 )
NETGEN_3D_Parameters_1_1.SetSecondOrder( 0 )
NETGEN_3D_Parameters_1_1.SetOptimize( 1 )
NETGEN_3D_Parameters_1_1.SetFineness( 3 )
NETGEN_3D_Parameters_1_1.SetChordalError( -1 )
NETGEN_3D_Parameters_1_1.SetChordalErrorEnabled( 0 )
NETGEN_3D_Parameters_1_1.SetUseSurfaceCurvature( 1 )
NETGEN_3D_Parameters_1_1.SetFuseEdges( 1 )
NETGEN_3D_Parameters_1_1.SetQuadAllowed( 0 )
NETGEN_3D_Parameters_1_1.SetCheckChartBoundary( 3 )
isDone = Mesh_1.SetMeshOrder( [ [ Radial_0, Radial_1, front_outer_sizing, front_surf_sizing, Rear_outer_sizing, Rear_surf_sizing, Section_0, Section_1, Front_3, Rear_2, Wake_2 ] ])

Viscous_Layers_front.SetTotalThickness( 1 )
Viscous_Layers_front.SetNumberLayers( 30 )
Viscous_Layers_front.SetStretchFactor( 1.2 )
Viscous_Layers_front.SetMethod( smeshBuilder.NODE_OFFSET )
Viscous_Layers_front.SetFaces( [ 171, 165 ], 0 )

Viscous_Layers_rear.SetTotalThickness( 1 )
Viscous_Layers_rear.SetNumberLayers( 30 )
Viscous_Layers_rear.SetStretchFactor( 1.2 )
Viscous_Layers_rear.SetMethod( smeshBuilder.NODE_OFFSET )
Viscous_Layers_rear.SetFaces( [ 117, 120 ], 0 )

NETGEN_1D_2D_3D_1 = Mesh_1.Tetrahedron(algo=smeshBuilder.NETGEN_1D2D3D,geom=Outer_domain_3)
smeshObj_1 = NETGEN_1D_2D_3D_1.GetSubMesh()
NETGEN_3D_Parameters_outer = NETGEN_1D_2D_3D_1.Parameters()
NETGEN_3D_Parameters_outer.SetMaxSize( 228.886 )
NETGEN_3D_Parameters_outer.SetMinSize( 5.85808 )
NETGEN_3D_Parameters_outer.SetSecondOrder( 0 )
NETGEN_3D_Parameters_outer.SetOptimize( 1 )
NETGEN_3D_Parameters_outer.SetFineness( 5 )
NETGEN_3D_Parameters_outer.SetGrowthRate( 0.1 )
NETGEN_3D_Parameters_outer.SetNbSegPerEdge( 2 )
NETGEN_3D_Parameters_outer.SetNbSegPerRadius( 3 )
NETGEN_3D_Parameters_outer.SetChordalError( -1 )
NETGEN_3D_Parameters_outer.SetChordalErrorEnabled( 0 )
NETGEN_3D_Parameters_outer.SetUseSurfaceCurvature( 1 )
NETGEN_3D_Parameters_outer.SetFuseEdges( 1 )
NETGEN_3D_Parameters_outer.SetQuadAllowed( 1 )
NETGEN_3D_Parameters_outer.SetCheckChartBoundary( 3 )
isDone = Mesh_1.SetMeshOrder( [ [ Radial_0, Radial_1, front_outer_sizing, front_surf_sizing, Rear_outer_sizing, Rear_surf_sizing, Section_0, Section_1, Front_3, Rear_2, Wake_2, smeshObj_1 ] ])
isDone = Mesh_1.Compute()

Mesh_1.GetMesh().RemoveSubMesh( smeshObj_1 )

## some objects were removed
aStudyBuilder = salome.myStudy.NewBuilder()
SO = salome.myStudy.FindObjectIOR(salome.myStudy.ConvertObjectToIOR(smeshObj_1))
if SO: aStudyBuilder.RemoveObjectWithChildren(SO)

## Set names of Mesh objects
smesh.SetName(NETGEN_3D_Parameters_outer, 'NETGEN 3D Parameters_outer')
smesh.SetName(Quadrangle_2D.GetAlgorithm(), 'Quadrangle_2D')
smesh.SetName(NETGEN_3D_Parameters_1, 'NETGEN 3D Parameters_1')
smesh.SetName(Regular_1D.GetAlgorithm(), 'Regular_1D')
smesh.SetName(Viscous_Layers_rear, 'Viscous Layers_rear')
smesh.SetName(NETGEN_3D.GetAlgorithm(), 'NETGEN 3D')
smesh.SetName(NETGEN_1D_2D_3D.GetAlgorithm(), 'NETGEN 1D-2D-3D')
smesh.SetName(Mesh_1.GetMesh(), 'Mesh_1')
smesh.SetName(NETGEN_2D.GetAlgorithm(), 'NETGEN 2D')
smesh.SetName(Hexa_3D.GetAlgorithm(), 'Hexa_3D')

smesh.SetName(Radial_1, 'Radial_1')
smesh.SetName(front_outer_sizing, 'front_outer_sizing')
smesh.SetName(Radial_0, 'Radial_0')
smesh.SetName(Rear_surf_sizing, 'Rear_surf_sizing')
smesh.SetName(front_surf_sizing, 'front_surf_sizing')
smesh.SetName(Rear_outer_sizing, 'Rear_outer_sizing')
smesh.SetName(Section_1_1_2, 'Section_1_1')
smesh.SetName(Section_1, 'Section_1')
smesh.SetName(Rear_1, 'Rear')

smesh.SetName(Front_3, 'Front')
smesh.SetName(Section_1_0_2, 'Section_1_0')
smesh.SetName(Section_0, 'Section_0')
smesh.SetName(Section_0_0_2, 'Section_0_0')
smesh.SetName(Section_0_1_2, 'Section_0_1')
smesh.SetName(Front_2, 'Front')
smesh.SetName(Rear_2, 'Rear')
smesh.SetName(Solid_3_2, 'Solid_3')
smesh.SetName(Wake_2, 'Wake')
smesh.SetName(Outer_domain_4, 'Outer_domain')

smesh.SetName(Radial_scale_0, 'Radial_scale_0')
smesh.SetName(Radial_scale_1, 'Radial_scale_1')
smesh.SetName(Viscous_Layers_front, 'Viscous Layers_front')
smesh.SetName(Sizing_surf, 'Sizing_surf')
smesh.SetName(Equi_dist, 'Equi_dist')
smesh.SetName(ViscousLayers_1, 'ViscousLayers_1')
smesh.SetName(ViscousLayers_2, 'ViscousLayers_2')
smesh.SetName(Sizing_outer, 'Sizing_outer')

smesh.SetName(Solid_12_2, 'Solid_12')
smesh.SetName(Wake_1, 'Wake')
smesh.SetName(Section_2_1_2, 'Section_2_1')
smesh.SetName(NETGEN_3D_Parameters_1_1, 'NETGEN 3D Parameters_1')


if salome.sg.hasDesktop():
  salome.sg.updateObjBrowser()
